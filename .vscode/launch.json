{
  "version": "0.2.0",
  "inputs": [
    {
      "id": "test-filter",
      "type": "promptString",
      "default": "*",
      "description": "The filter pattern for GTest"
    },
    {
      "id": "expression",
      "type": "promptString",
      "default": "(+ 99 1)",
      "description": "The expression to evaluate"
    },
    {
      "id": "even-value",
      "type": "promptString",
      "default": "10",
      "description": "A value that is even."
    },
    {
      "id": "test-suite",
      "type":"pickString",
      "description": "The test suite to run",
      "options": [
        "Lexer",
        "Parser",
        "LocalVariable",
        "LocalScope",
        "FlowGraph"
      ]
    }
  ],
  "configurations": [
    {
      "name": "Run All Tests",
      "type": "lldb",
      "request": "launch",
      "program": "${workspaceFolder}/build/Tests/scheme-tests",
      "args": [
        "--gtest_color=yes",
        "-logtostdout",
        "-colorlogtostdout"
      ],
      "cwd": "${workspaceFolder}",
      "initCommands": [
        "command source ${workspaceFolder}/.lldbinit"
      ]
    },
    {
      "name": "Run Tests",
      "type": "lldb",
      "request": "launch",
      "program": "${workspaceFolder}/build/Tests/scheme-tests",
      "args": [
        "--gtest_filter=${input:test-filter}",
        "--gtest_color=yes",
        "-logtostdout",
        "-colorlogtostdout"
      ],
      "cwd": "${workspaceFolder}",
      "initCommands": [
        "command source ${workspaceFolder}/.lldbinit"
      ]
    },
    {
      "name": "Run Test Suite",
      "type": "lldb",
      "request": "launch",
      "program": "${workspaceFolder}/build/Tests/scheme-tests",
      "args": [
        "--gtest_filter=${input:test-suite}Test*",
        "--gtest_color=yes",
        "-logtostdout",
        "-colorlogtostdout"
      ],
      "cwd": "${workspaceFolder}",
      "initCommands": [
        "command source ${workspaceFolder}/.lldbinit"
      ]
    },
    {
      "name": "Eval Basic Expr",
      "type": "lldb",
      "request": "launch",
      "program": "${workspaceFolder}/build/Sources/scm",
      "args": [
        "-logtostdout",
        "-colorlogtostdout",
        "--expr", "${input:expression}",
        "--reports-dir", "${workspaceFolder}"
      ],
      "cwd": "${workspaceFolder}",
      "initCommands": [
        "command source ${workspaceFolder}/.lldbinit"
      ]
    },
    {
      "name": "Eval Expr (Debug)",
      "type": "lldb",
      "request": "launch",
      "program": "${workspaceFolder}/build/Sources/scm",
      "args": [
        "-logtostdout",
        "-colorlogtostdout",
        "--expr", "${input:expression}",
        "--reports-dir", "${workspaceFolder}/reports",
        "--dump-ast",
        "--dump-flow-graph",
      ],
      "cwd": "${workspaceFolder}",
      "initCommands": [
        "command source ${workspaceFolder}/.lldbinit"
      ]
    },
    {
      "name": "Eval Basic Cond Expr (Debug)",
      "type": "lldb",
      "request": "launch",
      "program": "${workspaceFolder}/build/Sources/scm",
      "args": [
        "-logtostdout",
        "-colorlogtostdout",
        "--expr", "(cond #t 10 0)",
        "--reports-dir", "${workspaceFolder}/reports",
        "--dump-ast",
        "--dump-flow-graph",
      ],
      "cwd": "${workspaceFolder}",
      "initCommands": [
        "command source ${workspaceFolder}/.lldbinit"
      ]
    },
    {
      "name": "Eval Sq Expr (Debug)",
      "type": "lldb",
      "request": "launch",
      "program": "${workspaceFolder}/build/Sources/scm",
      "args": [
        "-logtostdout",
        "-colorlogtostdout",
        "--expr", "(begin (define sq (lambda (x) (* x x))) (sq 10))",
        "--reports-dir", "${workspaceFolder}/reports",
        "--dump-ast",
        "--dump-flow-graph",
      ],
      "cwd": "${workspaceFolder}",
      "initCommands": [
        "command source ${workspaceFolder}/.lldbinit"
      ]
    },
    {
      "name": "Eval Basic Test Module",
      "type": "lldb",
      "request": "launch",
      "program": "${workspaceFolder}/build/Sources/scm",
      "args": [
        "-logtostdout",
        "-colorlogtostdout",
        "--module", "(defmodule test (define x 10))",
        "--reports-dir", "${workspaceFolder}/reports",
        "--dump-ast",
        "--dump-flow-graph",
      ],
      "cwd": "${workspaceFolder}",
      "initCommands": [
        "command source ${workspaceFolder}/.lldbinit"
      ]
    },
    {
      "name": "Eval Complex Test Module",
      "type": "lldb",
      "request": "launch",
      "program": "${workspaceFolder}/build/Sources/scm",
      "args": [
        "-logtostdout",
        "-colorlogtostdout",
        "--module", "(defmodule test (begin (define even? (lambda (x) (eq? (% x 2) 0)))))",
        "--reports-dir", "${workspaceFolder}/reports",
        "--dump-ast",
        "--dump-flow-graph",
      ],
      "cwd": "${workspaceFolder}",
      "initCommands": [
        "command source ${workspaceFolder}/.lldbinit"
      ]
    },
    {
      "name": "Eval even? Expr (Debug)",
      "type": "lldb",
      "request": "launch",
      "program": "${workspaceFolder}/build/Sources/scm",
      "args": [
        "-logtostdout",
        "-colorlogtostdout",
        "--expr", "(begin (define value ${input:even-value}) (define even? (lambda (x) (eq? (% x 2) 0))) (print value) (cond (even? value) \"even\" \"odd\"))",
        "--reports-dir", "${workspaceFolder}/reports",
        "--dump-ast",
        "--dump-flow-graph",
      ],
      "cwd": "${workspaceFolder}",
      "initCommands": [
        "command source ${workspaceFolder}/.lldbinit"
      ]
    },
  ]
}