(defmodule kernel
  (define sq (lambda (x) (* x x)))
  (define PI 3.14159)
  ; (define TAU (* 2 PI))
  (define even? (lambda (x) (eq? (% x 2) 0)))
  (define number? (lambda (x) (eq? (type? x) "Number")))
  (define string? (lambda (x) (eq? (type? x) "String")))
  (define symbol? (lambda (x) (eq? (type? x) "Symbol")))
  (define lambda? (lambda (x) (eq? (type? x) "Lambda")))
  (define pair? (lambda (x) (eq? (type? x) "Pair")))
  (define module? (lambda (x) (eq? (type? x) "Module")))
  (define procedure? (lambda (x) (eq? (type? x) "Procedure")))
  (define max (lambda (a b) (cond (a > b) a b)))
  (define min (lambda (a b) (cond (a < b) a b))))